3.

let arr= [3,3,1,1,1,8,3,6,8,7,8]

let mp= new Map() 
let mp1= new Map() 
let ans= 0
let temp= []
let arr1= []

for(let i=0;i<arr.length;i++){
    mp.set(arr[i],mp.get(arr[i]) === undefined ? 1 : mp.get(arr[i]) + 1)
}

for(let i=0;i<arr.length;i++){
    mp1.set(arr[i],mp1.get(arr[i]) === undefined ? 1 : mp1.get(arr[i]) + 1)
}

function maximum(){
    let max= 0
    let keys1= mp.keys()

    mp.forEach((value,key)=>{
            if(value > max){
                max= value
            }
    })

    for(let key of keys1){
        if(mp.get(key) === max){
            temp.push(key)
            mp.delete(key)
        } 
    }
}

while(mp.size > 0)
    maximum()

arr= []
for(let i=0;i<temp.length;i++){
    let rp= mp1.get(temp[i])
    arr1= Array(rp).fill(temp[i])
    arr.push(...arr1)
}

console.log(arr)

-----------------------------------------------------------------------------------

2. 

let arr= [1,2,3,[1,2,3,4,[2,[3,4]]]]
let temp= []
let ans= []

function flat(arr){
    let temp= []
    for(let i=0;i<arr.length;i++){
        if(Array.isArray(arr[i])){
            temp.push(...flat(arr[i]))
        }
        else{
            temp.push(arr[i])
        }
    }
    return temp
}


console.log(flat(arr))

--------------------------------------------------------------------------------------

1.

let num1= 6
let count = 65
let arr= []
let arr1= []
let c= ''

for(let i= 0;i<num1;i++){
    arr1=[]
    for(let j= 0;j<num1;j++){
       
        c= String.fromCharCode(count)
        arr1.push(c)
        count++
        if(count > 90){
            count= 65
        }
    }
    arr.push(arr1.reverse())
}
console.log(arr)

-------------------------------------------------------------------

4.

class stack{
    constructor(){
        let top= -1
        let collection= []
    

    this.isEmpty= ()=>{
        if(top === -1)
            return true
        return false
    }

    this.size= ()=>{
        return collection.length
    }

    this.push= (ele)=>{
            top= top + 1
            collection[top]= ele
            console.log("\nThe element"+" "+ele+" "+"has been entered\n")
         }

    this.pop= ()=>{
        if(this.isEmpty())
            console.log("Stack Underflow")
        
        let ele= collection[top]
        collection[top--]
        console.log("Element"+" "+ele+" "+"has been removed")
        return ele
    }

  }
}


let s1= new stack()
let ans= []

s1.push(1)
s1.push(2)
s1.push(3)
s1.push(1)
s1.push(2)

console.log("-------------------Stack Entry Over---------------------")

function duplicate(){
    let ele= []
    for(let i=0;i<s1.size();i++){
        ele.push(s1.pop())
    }
    
    ele= ele.reverse()
    let len= ele.length
    for(let i=0;i<len;i++){
        s1.push(ele.shift())
    }
}

function even(){

    let ele= []
    for(let i=0;i<s1.size();i++){
        ele.push(s1.pop())
    }

    ele= ele.reverse()
    ele= [...ele.filter(ele => ele % 2 === 0)]
    let len= ele.length
    for(let i=0;i<len;i++){
        s1.push(ele.shift())
    }
}

duplicate()
even()

---------------------------------------------------------------------------------
